# Generated by Django 2.0.6 on 2018-06-22 20:19

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('management', '0001_initial'),
        ('person', '0001_initial'),
        ('location', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_short', models.CharField(blank=True, max_length=64)),
                ('title_long', models.CharField(blank=True, max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AggregationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('id', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('id_old', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=256)),
                ('slug', models.SlugField(blank=True, max_length=256, null=True, unique=True)),
                ('abstract', models.TextField(blank=True, null=True)),
                ('fulltext', models.TextField(blank=True, null=True)),
                ('dimension', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('date_start', models.DateTimeField(blank=True, null=True)),
                ('date_start_caption', models.CharField(blank=True, max_length=64)),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('date_end_caption', models.CharField(blank=True, max_length=64)),
                ('items_total', models.PositiveIntegerField(blank=True, null=True)),
                ('items_processed', models.PositiveIntegerField(blank=True, null=True)),
                ('items_online', models.PositiveIntegerField(blank=True, null=True)),
                ('access_local_status', models.NullBooleanField()),
                ('access_online_status', models.NullBooleanField()),
                ('access_link', models.URLField(blank=True, null=True)),
                ('location_specific', models.CharField(blank=True, max_length=256)),
                ('inventary_status', models.NullBooleanField()),
                ('inventary_last_date', models.DateField(blank=True, null=True)),
                ('inventary_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('access_condition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.AccessCondition')),
                ('aggregation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.AggregationType')),
                ('author', models.ManyToManyField(blank=True, to='person.Person')),
            ],
        ),
        migrations.CreateModel(
            name='DescriptionLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GenreTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('id', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=256)),
                ('abstract', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sets',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('id', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=256)),
                ('abstract', models.TextField(blank=True, null=True)),
                ('aggregation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.AggregationType')),
                ('description_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.DescriptionLevel')),
                ('items', models.ManyToManyField(blank=True, to='collection.Item')),
                ('sets_child', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.Sets')),
            ],
        ),
        migrations.CreateModel(
            name='Thumbnail',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.AddField(
            model_name='collection',
            name='description_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.DescriptionLevel'),
        ),
        migrations.AddField(
            model_name='collection',
            name='genre_tags',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.GenreTag'),
        ),
        migrations.AddField(
            model_name='collection',
            name='items',
            field=models.ManyToManyField(blank=True, to='collection.Item'),
        ),
        migrations.AddField(
            model_name='collection',
            name='location_generic',
            field=models.ManyToManyField(blank=True, to='location.Location'),
        ),
        migrations.AddField(
            model_name='collection',
            name='management_unit',
            field=models.ManyToManyField(blank=True, to='management.ManagementUnit'),
        ),
        migrations.AddField(
            model_name='collection',
            name='sets',
            field=models.ManyToManyField(blank=True, to='collection.Sets'),
        ),
        migrations.AddField(
            model_name='collection',
            name='thumbnail',
            field=models.ManyToManyField(blank=True, to='collection.Thumbnail'),
        ),
    ]
