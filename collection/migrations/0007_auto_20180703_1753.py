# Generated by Django 2.0.5 on 2018-07-03 20:53

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('collection', '0006_auto_20180629_1922'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='accesscondition',
            options={'verbose_name': 'Access Condition', 'verbose_name_plural': 'Access Conditions'},
        ),
        migrations.AlterModelOptions(
            name='collection',
            options={'verbose_name': 'Collection', 'verbose_name_plural': 'Collections'},
        ),
        migrations.AlterModelOptions(
            name='genretag',
            options={'verbose_name': 'Genre Tag', 'verbose_name_plural': 'Genre Tags'},
        ),
        migrations.AlterModelOptions(
            name='item',
            options={'verbose_name': 'Item', 'verbose_name_plural': 'Items'},
        ),
        migrations.AlterModelOptions(
            name='sets',
            options={'verbose_name': 'Container', 'verbose_name_plural': 'Containers'},
        ),
        migrations.AlterModelOptions(
            name='thumbnail',
            options={'verbose_name': 'Thumbnail', 'verbose_name_plural': 'Thumbnails'},
        ),
        migrations.AlterField(
            model_name='accesscondition',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='Auto set field', verbose_name='Created in'),
        ),
        migrations.AlterField(
            model_name='accesscondition',
            name='description',
            field=models.TextField(blank=True, help_text='Ex.: Some documents here have copyright...', null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='accesscondition',
            name='title_long',
            field=models.CharField(blank=True, help_text='Ex.: Partial - copyright.', max_length=128, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='accesscondition',
            name='title_short',
            field=models.CharField(blank=True, help_text='Ex.: Full Free, Partial, Retricted, etc.', max_length=64, verbose_name='Access'),
        ),
        migrations.AlterField(
            model_name='aggregationtype',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='Auto set field', verbose_name='Created in'),
        ),
        migrations.AlterField(
            model_name='aggregationtype',
            name='description',
            field=models.CharField(blank=True, help_text='Ex.: the collection is a group of...', max_length=512, null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='aggregationtype',
            name='title',
            field=models.CharField(blank=True, help_text='Ex.: collection, archive, etc', max_length=256, null=True, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='abstract',
            field=models.TextField(blank=True, help_text='Ex.: This collection is composed by...', null=True, verbose_name='Abstract'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='access_condition',
            field=models.ForeignKey(blank=True, help_text='Choose the more appropriate access condition to this collection', null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.AccessCondition', verbose_name='Access Condition'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='access_link',
            field=models.URLField(blank=True, help_text='Do you have some online link access to this collection?', null=True, verbose_name='Access Link'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='access_local_status',
            field=models.NullBooleanField(help_text='Is there any local access to the collection?', verbose_name='Local Access Status'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='access_online_status',
            field=models.NullBooleanField(help_text='Is there any online access to the collection?', verbose_name='Online Access Status'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='aggregation_type',
            field=models.ForeignKey(blank=True, help_text='Choose an Option', null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.AggregationType', verbose_name='Aggregation Type'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='author',
            field=models.ManyToManyField(blank=True, help_text="Choose some collection's authors", to='person.Person', verbose_name='Authors'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='This is an auto set field', verbose_name='Created in'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='date_end',
            field=models.DateTimeField(blank=True, help_text='Choose an final date', null=True, verbose_name='Final date'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='date_end_caption',
            field=models.CharField(blank=True, help_text='Choose a final date caption', max_length=64, null=True, verbose_name='Final date caption'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='date_start',
            field=models.DateTimeField(blank=True, help_text='Choose a start date', null=True, verbose_name='Initial Date'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='date_start_caption',
            field=models.CharField(blank=True, help_text='Choose a start date caption', max_length=64, null=True, verbose_name='Initial date caption'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='description_level',
            field=models.ForeignKey(blank=True, help_text='Choose an Option', null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.DescriptionLevel', verbose_name='Description Level'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='dimensions',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Feed with information about dimensions', null=True, verbose_name='Dimensions'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='fulltext',
            field=models.TextField(blank=True, help_text='Ex.: All itens in this collection...', null=True, verbose_name='Full Text'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='genre_tags',
            field=models.ForeignKey(blank=True, help_text='Choose one or more options', null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.GenreTag', verbose_name='Genre Tags'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='id',
            field=models.CharField(blank=True, help_text='Institucional Collection Human Identifier', max_length=64, null=True, unique=True, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='id_old',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Legacy Identifiers', null=True, verbose_name='Old IDs'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='inventary_data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Several data about the inventary', null=True, verbose_name='Inventary Data'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='inventary_last_date',
            field=models.DateField(blank=True, help_text='What is the inventary last date?', null=True, verbose_name='Inventary Last Date'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='inventary_status',
            field=models.NullBooleanField(help_text='Is there any inventary to this collection?', verbose_name='Inventary Status'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='items',
            field=models.ManyToManyField(blank=True, help_text='Choose some items that compose this collection. ATTENTION: You can create a container and aggregate items there', to='collection.Item', verbose_name='Items'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='items_online',
            field=models.PositiveIntegerField(blank=True, help_text='Total online collection items', null=True, verbose_name='Online Items'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='items_processed',
            field=models.PositiveIntegerField(blank=True, help_text='Total processed items', null=True, verbose_name='Processed Items'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='items_total',
            field=models.PositiveIntegerField(blank=True, help_text='Total collection items', null=True, verbose_name='Total Items'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='location_generic',
            field=models.ManyToManyField(blank=True, help_text='What is the generic location to the collection?', to='location.Location', verbose_name='Generic Location'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='location_specific',
            field=models.CharField(blank=True, help_text='What is the specific location to this collection?', max_length=256, verbose_name='Specific Location'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='management_unit',
            field=models.ManyToManyField(blank=True, help_text='What is the management unit concerning to this collection?', to='management.ManagementUnit', verbose_name='Management Unit'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='other_data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Other unstructured data of this collection', null=True, verbose_name='Other Data'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='sets',
            field=models.ManyToManyField(blank=True, help_text='Choose containers that compose the collection', to='collection.Sets', verbose_name='Containers'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='slug',
            field=models.SlugField(blank=True, help_text='Ex.: complete-collection-sebastiao-salgado', max_length=256, null=True, unique=True, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='thumbnail',
            field=models.ManyToManyField(blank=True, help_text='Choose some introduction and representative images', to='collection.Thumbnail', verbose_name='Thumbnails'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='title',
            field=models.CharField(blank=True, help_text='Ex.: The complete photo collection of Sebastião Salgado.', max_length=256, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='This is an auto set field', primary_key=True, serialize=False, unique=True, verbose_name='Universal Unique Identifier'),
        ),
        migrations.AlterField(
            model_name='descriptionlevel',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='Auto set field', verbose_name='Created in'),
        ),
        migrations.AlterField(
            model_name='descriptionlevel',
            name='description',
            field=models.CharField(blank=True, help_text='The description of level type...', max_length=512, null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='descriptionlevel',
            name='title',
            field=models.CharField(blank=True, help_text='Ex.: basic - 0', max_length=256, null=True, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='genretag',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='Auto set field', verbose_name='Created in'),
        ),
        migrations.AlterField(
            model_name='genretag',
            name='description',
            field=models.CharField(blank=True, help_text='Ex.: A photo is all kind part or entire piece of an image produced by a camera.', max_length=512, null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='genretag',
            name='title',
            field=models.CharField(blank=True, help_text='Ex.: photo, picture, draw, etc', max_length=256, null=True, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='item',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='This is an auto set field', verbose_name='Created in'),
        ),
        migrations.AlterField(
            model_name='item',
            name='description',
            field=models.TextField(blank=True, help_text='Ex.: Gelatin negative of the first photo...', null=True, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='item',
            name='id',
            field=models.CharField(blank=True, help_text='Institucional Human Identifier', max_length=64, null=True, unique=True, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='item',
            name='title',
            field=models.CharField(blank=True, help_text='ex.: Salgado Negative - 001', max_length=256, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='item',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='This is an auto set field', primary_key=True, serialize=False, unique=True, verbose_name='Universal Unique Identifier'),
        ),
        migrations.AlterField(
            model_name='sets',
            name='aggregation_type',
            field=models.ForeignKey(blank=True, help_text='Container Aggregation Type', null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.AggregationType', verbose_name='Aggregation Type'),
        ),
        migrations.AlterField(
            model_name='sets',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='This is an auto set field', verbose_name='Created in'),
        ),
        migrations.AlterField(
            model_name='sets',
            name='description',
            field=models.TextField(blank=True, help_text='Ex.: This container is...', null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='sets',
            name='description_level',
            field=models.ForeignKey(blank=True, help_text='Choose a description level to this container', null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.DescriptionLevel', verbose_name='Description level'),
        ),
        migrations.AlterField(
            model_name='sets',
            name='id',
            field=models.CharField(blank=True, help_text='Institucional Container Human Identifier', max_length=64, null=True, unique=True, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='sets',
            name='items',
            field=models.ManyToManyField(blank=True, help_text='Itens that composes the container', to='collection.Item', verbose_name='Items'),
        ),
        migrations.AlterField(
            model_name='sets',
            name='sets_child',
            field=models.ForeignKey(blank=True, help_text='Choose child containers to aggregate to this one', null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.Sets', verbose_name='Child containers'),
        ),
        migrations.AlterField(
            model_name='sets',
            name='title',
            field=models.CharField(blank=True, help_text='Ex.: Container of...', max_length=256, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='sets',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='This is an auto set field', primary_key=True, serialize=False, unique=True, verbose_name='Universal Unique Identifier'),
        ),
        migrations.AlterField(
            model_name='thumbnail',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='This is an auto set field', verbose_name='Created in'),
        ),
        migrations.AlterField(
            model_name='thumbnail',
            name='image',
            field=models.ImageField(blank=True, help_text='The Image File', null=True, upload_to='', verbose_name='Image'),
        ),
        migrations.AlterField(
            model_name='thumbnail',
            name='title',
            field=models.CharField(blank=True, help_text='Ex.: Image title, like "the photographer resting" ', max_length=256, null=True, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='thumbnail',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='This is an auto set field', primary_key=True, serialize=False, unique=True, verbose_name='Universal Unique Identifier'),
        ),
    ]
