# Generated by Django 2.0.5 on 2018-07-03 20:53

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('person', '0002_auto_20180627_1712'),
        ('management', '0002_auto_20180627_1712'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aquisition',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Auto set field', primary_key=True, serialize=False, unique=True, verbose_name='Universal Unique Identifier')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Auto set field', verbose_name='Created in')),
                ('title', models.CharField(blank=True, help_text='Ex.: Aquisition from The Photographer...', max_length=256, null=True, verbose_name='Title')),
                ('date_start', models.DateTimeField(blank=True, help_text='Choose a start date', null=True, verbose_name='Initial Date')),
                ('date_end', models.DateTimeField(blank=True, help_text='Choose an final date - special for lending', null=True, verbose_name='Final Date')),
                ('abstract', models.TextField(blank=True, help_text='Ex.: this acquisition is composed by...', null=True, verbose_name='Abstract')),
                ('fulltext', models.TextField(blank=True, help_text='Ex.: All itens in this acquisition...', null=True, verbose_name='Full Text')),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Other unstructured data of this collection', null=True, verbose_name='Other Data')),
                ('dealer', models.ManyToManyField(blank=True, help_text='Choose people who traded this asset', related_name='personDealer', to='person.Person', verbose_name='Dealer')),
            ],
            options={
                'verbose_name': 'Aquisition',
                'verbose_name_plural': 'Aquisitions',
            },
        ),
        migrations.CreateModel(
            name='AquisitionMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(blank=True, max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Aquisition Method',
                'verbose_name_plural': 'Aquisition Methods',
            },
        ),
        migrations.AlterModelOptions(
            name='managementunit',
            options={'verbose_name': 'Management Unit', 'verbose_name_plural': 'Management Units'},
        ),
        migrations.AlterField(
            model_name='managementunit',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='Auto set field.', verbose_name='Created in'),
        ),
        migrations.AlterField(
            model_name='managementunit',
            name='description',
            field=models.TextField(blank=True, help_text='The description of Management Unit.', null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='managementunit',
            name='title',
            field=models.CharField(blank=True, help_text='Title of Management Unit.', max_length=256, verbose_name='Title'),
        ),
        migrations.AddField(
            model_name='aquisition',
            name='method',
            field=models.ForeignKey(blank=True, help_text='Choose an Option', null=True, on_delete=django.db.models.deletion.SET_NULL, to='management.AquisitionMethod', verbose_name='Aquisition Method'),
        ),
        migrations.AddField(
            model_name='aquisition',
            name='source',
            field=models.ManyToManyField(blank=True, help_text='Choose people who have been source to this acquisition', related_name='personSource', to='person.Person', verbose_name='Source'),
        ),
    ]
